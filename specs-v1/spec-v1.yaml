openapi: 3.0.4
info:
  title: crowdproj-resources
  description: Microservice to support the Resource planner.
  contact:
    name: Sergey Okatov
    email: sokatov@gmail.com
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
servers:
  - url: http://localhost:8080/v1
tags:
  - name: resources
    description: support the Resource planner

paths:
  /resources/create:
    post:
      tags:
        - resources
      summary: Create resource
      operationId: resourceCreate
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceCreateRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceCreateResponse'

  /resources/read:
    post:
      tags:
        - resources
      summary: Read resource
      operationId: resourceRead
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceReadRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceReadResponse'

  /resources/update:
    post:
      tags:
        - resources
      summary: Update resource
      operationId: resourceUpdate
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceUpdateRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUpdateResponse'

  /resources/delete:
    post:
      tags:
        - resources
      summary: Delete resource
      operationId: resourceDelete
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceDeleteRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDeleteResponse'

  /resources/search:
    post:
      tags:
        - resources
      summary: Search resources by id
      operationId: resourceSearch
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceSearchRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSearchResponse'

components:
  schemas:

    IResourceRequest:
      allOf:
        - $ref: './base.yaml#/components/schemas/IRequest'
        - type: object
          discriminator:
            propertyName: requestType
            mapping:
              create: '#/components/schemas/ResourceCreateRequest'
              read: '#/components/schemas/ResourceReadRequest'
              update: '#/components/schemas/ResourceUpdateRequest'
              delete: '#/components/schemas/ResourceDeleteRequest'
              search: '#/components/schemas/ResourceSearchRequest'

    IResourceResponse:
      allOf:
        - $ref: './base.yaml#/components/schemas/IResponse'
        - type: object
          discriminator:
            propertyName: responseType
            mapping:
              create: '#/components/schemas/ResourceCreateResponse'
              read: '#/components/schemas/ResourceReadResponse'
              update: '#/components/schemas/ResourceUpdateResponse'
              delete: '#/components/schemas/ResourceDeleteResponse'
              search: '#/components/schemas/ResourceSearchResponse'
              init: '#/components/schemas/ResourceInitResponse'

    Error:
      $ref: './base.yaml#/components/schemas/Error'

    RequestId:
      $ref: './base.yaml#/components/schemas/RequestId'

    ResourceLock:
      type: string
      description: "An optimistic lock"

    ResponseResult:
      $ref: './base.yaml#/components/schemas/ResponseResult'

    RequestDebug:
      $ref: './base.yaml#/components/schemas/CpRequestDebug'

    ResourceId:
      type: string
      description: Resource ID

    OtherResourceId:
      type: string
      description: link to the Resource from other microservices

    ScheduleId:
      type: string
      description: link to the Resource Schedule Template microservice

    UserId:
      type: string
      description: A unique identifier user

    BaseResource:
      type: object
      description: "Object describes resources"
      properties:
        resourceId:
          $ref: '#/components/schemas/OtherResourceId'
        scheduleId:
          $ref: '#/components/schemas/ScheduleId'
        ownerId:
          $ref: '#/components/schemas/UserId'


    ResourceCreateObject:
      allOf:
        - $ref: '#/components/schemas/BaseResource'

    ResourceUpdateObject:
      allOf:
        - $ref: '#/components/schemas/BaseResource'
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/ResourceId'
            lock:
              $ref: '#/components/schemas/ResourceLock'

    ResourceCreateRequest:
      allOf:
        - $ref: '#/components/schemas/IResourceRequest'
        - $ref: '#/components/schemas/RequestDebug'
        - type: object
          properties:
            resource:
              $ref: '#/components/schemas/ResourceCreateObject'

    ResourceReadRequest:
      allOf:
        - $ref: '#/components/schemas/IResourceRequest'
        - $ref: '#/components/schemas/RequestDebug'
        - type: object
          properties:
            resourceId:
              type: object
              items:
                $ref: '#/components/schemas/ResourceId'

    ResourceUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/IResourceRequest'
        - $ref: '#/components/schemas/RequestDebug'
        - type: object
          properties:
            resource:
              $ref: '#/components/schemas/ResourceUpdateObject'

    ResourceDeleteRequest:
      allOf:
        - $ref: '#/components/schemas/IResourceRequest'
        - $ref: '#/components/schemas/RequestDebug'
        - type: object
          properties:
            resourceId:
              $ref: '#/components/schemas/ResourceId'
            lock:
              $ref: '#/components/schemas/ResourceLock'

    ResourceSearchRequest:
      allOf:
        - $ref: '#/components/schemas/IResourceRequest'
        - $ref: '#/components/schemas/RequestDebug'
        - type: object
          properties:
            resourceFilter:
              $ref: '#/components/schemas/ResourceSearchFilter'

    ResourceSearchFilter:
      type: object
      description: filters for resource search
      properties:
        searchString:
          type: string
          description: resource string


    ResourceResponseObject:
      allOf:
        - type: object
          description: Object that is returned in the backend response
          properties:
            id:
              $ref: '#/components/schemas/ResourceId'
            deleted:
              type: boolean
              description: resources deletion flag
              example: false
            lock:
              $ref: '#/components/schemas/ResourceLock'
        - $ref: '#/components/schemas/BaseResource'

    ResourceResponseSingle:
      allOf:
        - type: object
          description: Response with one resource
          properties:
            calendarResources:
              $ref: '#/components/schemas/ResourceResponseObject'

    ResourceResponseMulti:
      allOf:
        - type: object
          description: Response with list of resource
          properties:
            resource:
              type: array
              items:
                $ref: '#/components/schemas/ResourceResponseObject'

    ResourceCreateResponse:
      allOf:
        - $ref: '#/components/schemas/IResourceResponse'
        - $ref: '#/components/schemas/ResourceResponseSingle'

    ResourceReadResponse:
      allOf:
        - $ref: '#/components/schemas/IResourceResponse'
        - $ref: '#/components/schemas/ResourceResponseMulti'

    ResourceUpdateResponse:
      allOf:
        - $ref: '#/components/schemas/IResourceResponse'
        - $ref: '#/components/schemas/ResourceResponseSingle'

    ResourceDeleteResponse:
      allOf:
        - $ref: '#/components/schemas/IResourceResponse'
        - $ref: '#/components/schemas/ResourceResponseSingle'

    ResourceSearchResponse:
      allOf:
        - $ref: '#/components/schemas/IResourceResponse'
        - $ref: '#/components/schemas/ResourceResponseMulti'

    ResourceInitResponse:
      allOf:
        - $ref: '#/components/schemas/IResourceResponse'